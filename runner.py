#!/usr/bin/env python3

import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import os
import random
import socket
import subprocess
import sys
import time
from datetime import datetime
from itertools import product
from random import randint
from tqdm import tqdm

HOST = '127.0.0.1'
PORT = 10000 + randint(0, 20000)
# for noisy commands output
LOG_PATH = f'log_{str(datetime.now())}.txt'
logf = open(LOG_PATH, 'a')

# only for some progress prints
VERBOSE = False

def log(*args, **kwargs):
    if VERBOSE:
        print(*args, **kwargs)

def spawn_server(srv_binary, prepended_args, threads):
    # -t, --threads=<num>       number of threads to use (default: 4)
    # -c, --conn-limit=<num>    max simultaneous connections (default: 1024)
    # -p, --port=<num>          TCP port to listen on (default: 11211)
    # -B, --protocol=<name>     protocol - one of ascii, binary, or auto (default: auto-negotiate)
    p = subprocess.Popen(executable=srv_binary,
        args=[srv_binary] + prepended_args + [
            '-t', str(threads),
            '-c', '4096',
            '-p', str(PORT),
            '-B', 'binary',
        ],
        stdout=logf,
        stderr=logf,
    )
    wait_for_server(HOST, PORT)
    return p

def wait_for_server(host, port):
    log('Waiting for the server...')
    while True:
        try:
            with socket.create_connection((HOST, PORT)) as s:
                break
        except ConnectionRefusedError:
            time.sleep(0.1)
    log('Server is up!')

def kill_server(p):
    log('Killing server...')
    p.terminate()
    p.wait()
    log('Done.')

def cut_between(source, before, after):
    pos1 = source.find(before)
    pos2 = source.find(after, pos1 + len(before))
    assert pos1 != -1
    assert pos2 != -1
    return source[pos1 + len(before) : pos2]

def benchmark(req_size, time_s):
    # --distinct-client-seed     Use a different random seed for each client
    # --key-maximum=NUMBER       Key ID maximum value (default: 10000000)
    # -d  --data-size=SIZE       Object data size in bytes (default: 32)
    # --randomize                random seed based on timestamp (default is constant value)
    # --test-time=SECS           Number of seconds to run the test
    # --ratio=RATIO              Set:Get ratio (default: 1:10)
    # --pipeline=NUMBER          Number of concurrent pipelined requests (default: 6)
    # -c, --clients=NUMBER           Number of clients per thread (default: 50)
    # -t, --threads=NUMBER           Number of threads (default: 4)
    p = subprocess.run([
        './memtier_benchmark/memtier_benchmark',
        '-s', HOST,
        '-p', str(PORT),
        '--protocol=memcache_binary',
        '--hide-histogram',
        '--distinct-client-seed',
        '--key-maximum=100000',
        f'-d {req_size}',
        '--randomize',
        f'--test-time={time_s}',
        '--ratio=1:9',
        '--pipeline=6',
        '-c', '6',
        '-t', '7',
    ], capture_output=True)
    output = p.stdout.decode()
    # [Ops/sec, Hits/sec, Misses/sec, Avg. Latency, p50 Latency, p99 Latency, p99.9 Latency, KB/sec]
    stats_gets = [float(x) for x in cut_between(output, '\nGets', '\n').split()]
    stats_total = [float(x) for x in cut_between(output, '\nTotals', '\n').split()]
    # fix up hits and misses to be percentage and thus make them actually useful
    stats_total[1] = stats_total[1] / stats_gets[0]
    stats_total[2] = stats_total[2] / stats_gets[0]
    return stats_total

def test_config(srv_binary, prepended_args, srv_threads=16, req_size=4096):
    srv = spawn_server(srv_binary, prepended_args, srv_threads)
    res = benchmark(req_size, time_s=30)
    kill_server(srv)
    return res

def test_native(srv_threads=16, req_size=4096):
    return test_config('./memcached', [], srv_threads, req_size)

def test_direct(srv_threads=16, req_size=4096):
    return test_config('gramine-direct', ['./memcached'], srv_threads, req_size)

def test_sgx(srv_threads=16, req_size=4096):
    return test_config('gramine-sgx', ['./memcached'], srv_threads, req_size)

def print_stats(stats):
    fmt = '{:<14}' + '{:>15}' * 8
    print(fmt.format(' ', 'Ops/s', 'Hits', 'Misses', 'Avg. Latency', 'p50 Latency', 'p99 Latency', 'p99.9 Latency', 'KB/s'))
    for name, nums in stats:
        nums = nums[:]
        nums[0] = f'{nums[0]*100:.1f}%'
        nums[1] = f'{nums[1]*100:.1f}%'
        nums[2] = f'{nums[2]*100:.1f}%'
        print(fmt.format(name, *nums))

def print_delta_stats(stats, baseline, include_only=None):
    if include_only is None:
        include_only = [key for key, _ in stats if key != baseline]
    include_only = set(include_only)
    fmt = '{:<14}' + '{:>15}' * 8
    print(fmt.format('⊥'+baseline, 'Ops/s', 'Hits', 'Misses', 'Avg. Latency', 'p50 Latency', 'p99 Latency', 'p99.9 Latency', 'KB/s'))
    for name, nums in stats:
        if name == baseline:
            baseline_stats = nums
            break
    else:
        raise RuntimeError('unknown baseline')
    for name, nums in stats:
        if name not in include_only:
            continue
        nums = [f'{(num-base)/base*100:+.1f}%' for base, num in zip(baseline_stats, nums)]
        print(fmt.format('Δ' + name, *nums))

def print_matrix(rows, cols, m):
    # cols = set()
    # rows = set()
    # for x,y in m:
    #     rows.add(x)
    #     cols.add(y)
    # cols = list(cols)
    # cols.sort()
    # rows = list(rows)
    # rows.sort()
    print(f'{"":>8} ', end='')
    for y in cols:
        print(f'{y:>8} ', end='')
    print()
    for x in rows:
        print(f'{x:>8} ', end='')
        for y in cols:
            if (x,y) in m:
                print(f'{m[x,y]:>7.1f}% ', end='')
            else:
                print(f'{"...":>8} ', end='')
        print()

def render_heatmap(rows, cols, m, output_path):
    # x_trim = 32
    # y_trim = 19
    m = np.array(
        [[m[x,y] for y in cols] for x in rows]
    )
    # rows = rows[:x_trim]
    # cols = cols[:y_trim]

    fig, ax = plt.subplots(figsize=(14,20))
    im = ax.imshow(m)

    # Show all ticks and label them with the respective list entries
    ax.set_xticks(np.arange(len(cols)), labels=cols)
    ax.set_yticks(np.arange(len(rows)), labels=rows)
    ax.tick_params(top=True, bottom=False, labeltop=True, labelbottom=False)

    # Rotate the tick labels and set their alignment.
    plt.setp(ax.get_xticklabels(), rotation=-45, ha="right", rotation_mode="anchor")

    # Loop over data dimensions and create text annotations.
    for i in range(len(rows)):
        for j in range(len(cols)):
            text = ax.text(j, i, f'{m[i, j]:.1f}%', ha="center", va="center", color="w")

    # ax.set_title("")
    fig.tight_layout()
    plt.savefig(output_path, dpi=600.0)

def main_rwlock_benchmark(args):
    if len(args) < 1:
        print(f'Usage: {args[0]} CHECKOUT_COMMAND_TEMPLATE')
        return 2
    results = []

    subprocess.run(
        'make -j8',
        shell=True,
        check=True,
        stdout=logf,
        stderr=logf,
    )
    log('Running native...')
    native_stats = test_native()
    results.append(('native', native_stats))

    for remote, commit, title in COMMITS:
        # the ugly part
        log(f'Checking {remote}/{commit}...')
        assert 'REMOTE' in args[1]
        assert 'COMMIT' in args[1]
        subprocess.run(
            args[1].replace('REMOTE', remote).replace('COMMIT', commit),
            shell=True,
            check=True,
            stdout=logf,
            stderr=logf,
        )
        subprocess.run(
            'make clean && make -j8 SGX=1',
            shell=True,
            check=True,
            stdout=logf,
            stderr=logf,
        )
        log('Running direct...')
        direct_stats = test_direct()
        results.append((title + '-direct', direct_stats))
        log('Running sgx...')
        sgx_stats = test_sgx()
        results.append((title + '-sgx', sgx_stats))

    print_stats(results)
    print()
    print_delta_stats(
        stats = results,
        baseline = 'native',
    )
    print()
    print_delta_stats(
        stats = results,
        baseline = 'master-direct',
        include_only = ['rwlock-direct']
    )
    print()
    print_delta_stats(
        stats = results,
        baseline = 'master-sgx',
        include_only = ['rwlock-sgx']
    )
    return 0

def select_gramine_commit(commit_title_to_select, checkout_command_template):
    COMMITS = [
        ('origin', '634d0392c3acec724dad5a6af8e6305f166eca57', 'master'), # merge_base(master, borys/handle_map)
        ('origin', '46c5b157012dce9c7cf943fc7fe9e4e27a20eeaf', 'rwlock'), # borys/handle_map
        ('mkow', '63fe7cb832c480cee468fe8ea3ba638ffc69db1d', 'stale-write'), # mkow/perf-testing
    ]
    for remote, commit, title in COMMITS:
        # the ugly part
        if title == commit_title_to_select:
            log(f'Checking {remote}/{commit}...')
            assert 'REMOTE' in checkout_command_template
            assert 'COMMIT' in checkout_command_template
            subprocess.run(
                checkout_command_template.replace('REMOTE', remote).replace('COMMIT', commit),
                shell=True,
                check=True,
                stdout=logf,
                stderr=logf,
            )
            subprocess.run(
                'make clean && make -j8 SGX=1',
                shell=True,
                check=True,
                stdout=logf,
                stderr=logf,
            )
            break
    else:
        raise RuntimeError(f'{commit_title_to_select} commit not specified!')

def main_matrix_benchmark(args):
    if len(args) < 1:
        print(f'Usage: {args[0]} CHECKOUT_COMMAND_TEMPLATE')
        return 2
    checkout_command_template = args[1]

    subprocess.run(
        'make -j8',
        shell=True,
        check=True,
        stdout=logf,
        stderr=logf,
    )
    select_gramine_commit('master', checkout_command_template)

    # srv_threads_range = range(16, 19)
    srv_threads_range = range(1, 33)
    # req_size_range = range(4096, 4096*3, 4096)
    req_size_range = range(4096, 4096*20, 4096)
    # res_direct = {}
    # res_sgx = {}
    # todo = list(product(srv_threads_range, req_size_range))
    # random.shuffle(todo) # for faster/better live results overview, plus less accidental time correlation
    # for srv_threads, req_size in tqdm(todo):
    #     log('Running native...')
    #     native_stats = test_native(srv_threads, req_size)
    #     log('Running direct...')
    #     stats = test_direct(srv_threads, req_size)
    #     # Only Ops/s
    #     res_direct[srv_threads,req_size] = (stats[0] - native_stats[0]) / native_stats[0] * 100
    #     log('Running sgx...')
    #     stats = test_sgx(srv_threads, req_size)
    #     res_sgx[srv_threads,req_size] = (stats[0] - native_stats[0]) / native_stats[0] * 100
    #     print('-'*150)
    #     print_matrix(list(srv_threads_range), list(req_size_range), res_direct)
    #     print()
    #     print_matrix(list(srv_threads_range), list(req_size_range), res_sgx)
    # print(list(srv_threads_range), list(req_size_range), res_direct)
    # print(list(srv_threads_range), list(req_size_range), res_sgx)
    # log(list(srv_threads_range), list(req_size_range), res_direct)
    # log(list(srv_threads_range), list(req_size_range), res_sgx)
    # render_heatmap(list(srv_threads_range), list(req_size_range), res_direct, 'heatmap_direct.png')
    # render_heatmap(list(srv_threads_range), list(req_size_range), res_sgx, 'heatmap_sgx.png')


    # TODO: both tests should be randomized between each other, but that complicates setup
    #       (switching between 2 gramines)

    todo = list(product(srv_threads_range, req_size_range))
    random.shuffle(todo) # for faster/better live results overview, plus less accidental time correlation
    base_stats = {}
    for srv_threads, req_size in tqdm(todo):
        log('Running direct...')
        stats = test_direct(srv_threads, req_size)
        base_stats[srv_threads,req_size] = stats[0]
        print('-'*150)
        print_matrix(list(srv_threads_range), list(req_size_range), base_stats)

    select_gramine_commit('rwlock', checkout_command_template)
    diff_stats = {}
    for srv_threads, req_size in tqdm(todo):
        log('Running direct...')
        stats = test_direct(srv_threads, req_size)
        diff_stats[srv_threads,req_size] = (stats[0] - base_stats[srv_threads,req_size]) / base_stats[srv_threads,req_size] * 100
        print('-'*150)
        print_matrix(list(srv_threads_range), list(req_size_range), diff_stats)
    print(list(srv_threads_range), list(req_size_range), diff_stats)
    log(list(srv_threads_range), list(req_size_range), diff_stats)
    render_heatmap(list(srv_threads_range), list(req_size_range), diff_stats, 'heatmap_direct.png')



    # print_matrix({(1, 4096): -0.6081262562310951, (1, 8192): -0.6720628415164789, (2, 4096): -0.43903119908452604, (2, 8192): -0.4794070685294414})
    # print()
    # print_matrix({(1, 4096): -0.8768565256309072, (1, 8192): -0.8946999014260856, (2, 4096): -0.7859536577388341, (2, 8192): -0.8191668526645598})

    # render_heatmap(
    #     [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32],
    #     [4096, 8192, 12288, 16384, 20480, 24576, 28672, 32768, 36864, 40960, 45056, 49152, 53248, 57344, 61440, 65536, 69632, 73728, 77824],
    #     {(30, 77824): -0.36631120672713785, (18, 12288): -12.301576734635518, (15, 65536): -12.382286607509071, (16, 77824): -23.65410656932773, (12, 20480): -23.982400151577195, (20, 28672): -16.145092228129993, (29, 28672): -35.90311378858371, (28, 24576): -22.976414428986487, (30, 20480): -27.036505951387767, (20, 40960): -12.692300122145042, (8, 28672): -9.730416793711747, (12, 45056): -9.856444847387676, (21, 28672): -13.268817775275268, (24, 24576): -21.39781903324395, (3, 69632): -9.463702374007092, (4, 45056): -16.458395807554126, (11, 69632): 2.5217621008149975, (23, 16384): -21.399111460225065, (5, 20480): -16.243562483082233, (25, 69632): -12.203149408686617, (3, 32768): -19.51706366121166, (25, 45056): -25.560920156276108, (24, 77824): 2.8535673132292914, (9, 40960): -1.6729453095820426, (3, 61440): -17.415375584014104, (32, 12288): -25.097320927163917, (26, 49152): -16.087616945006104, (25, 57344): -21.777672331751695, (6, 24576): -16.81985207524163, (32, 45056): -25.535184593532062, (13, 36864): 1.1789694598306615, (25, 28672): -21.36429875881038, (4, 36864): -22.911435395159483, (23, 53248): -20.789210327104918, (12, 12288): -10.198116977814735, (22, 12288): 7.751076600513125, (31, 20480): -32.72488020250194, (10, 53248): -8.513577055890561, (6, 16384): -12.495358967346212, (6, 61440): -13.40357211678145, (14, 49152): -10.615839587250884, (7, 40960): -5.174961662140695, (6, 36864): -7.153861632733846, (15, 73728): -16.06524050431656, (19, 69632): -0.9001062319474142, (17, 24576): -2.9984251964099573, (12, 32768): -8.957282471829545, (28, 20480): -24.024594628461124, (13, 49152): 4.737855493837525, (16, 57344): -15.054739637143943, (17, 73728): -5.218878799682136, (32, 49152): -33.654979990976244, (20, 49152): -2.071988509882236, (9, 49152): -5.806131485496082, (10, 12288): 6.81983233350653, (4, 40960): 6.204342917224151, (21, 69632): 8.59768831576476, (32, 57344): -27.717634023359455, (1, 45056): -9.405426526983307, (16, 32768): -0.19787927767249683, (17, 69632): -15.23169186586705, (18, 49152): -8.456130421212643, (22, 8192): -9.649250688019649, (2, 20480): -36.084892895959634, (7, 45056): -7.678719692484792, (18, 24576): -20.06102240980378, (12, 8192): -15.697767691638791, (26, 24576): -12.503002548684522, (29, 16384): -4.42253250601071, (24, 28672): -24.524644740379188, (16, 73728): 3.9433704093847686, (28, 61440): -27.836504428807075, (14, 24576): -16.847057291305994, (23, 61440): -16.943905725666056, (9, 61440): -6.516623864336661, (16, 65536): -32.57168039917699, (31, 16384): -24.03229128407008, (31, 53248): -36.35091088423376, (32, 32768): -34.284137545171575, (28, 73728): -8.727191229644035, (17, 49152): 2.9542755265533245, (32, 69632): -14.226160459673128, (23, 73728): 2.0061694141466817, (29, 77824): -11.843251915501908, (19, 12288): -27.19203229828992, (5, 24576): -21.620103260088268, (3, 53248): -4.136698455281001, (13, 24576): 1.4968649647864207, (21, 20480): -13.643421641854234, (26, 12288): -18.210980221647453, (21, 45056): -11.72452498817279, (2, 45056): -30.225439581516788, (4, 77824): -15.513264059771906, (11, 4096): -8.80246690055099, (32, 8192): -40.37468969436765, (13, 8192): 5.583862240759266, (24, 49152): 8.135597190727184, (15, 40960): 0.7365163385226615, (10, 49152): -15.040354169594439, (22, 57344): -17.085200941749864, (11, 40960): -5.022476866174854, (26, 28672): -20.75384421696312, (13, 65536): -3.038134193187395, (12, 40960): -13.131589150476092, (31, 65536): 0.35578199196439075, (25, 32768): -8.548959549487206, (27, 4096): -31.165631744396283, (13, 16384): 7.9784956047270335, (6, 32768): -21.722180936813476, (16, 4096): -22.994230066757453, (13, 12288): 16.67174809003126, (12, 53248): -3.339956596695671, (31, 8192): -35.351084278175406, (2, 49152): -16.402102775876344, (30, 24576): -18.881683069927092, (18, 65536): 1.0012165714076517, (27, 16384): -28.50277283084159, (2, 61440): 8.622109830810581, (8, 73728): -12.985572492868624, (17, 45056): -14.491293424837886, (4, 61440): -26.603248058479593, (5, 40960): -17.12157036399986, (6, 49152): 6.689403627667501, (17, 61440): -0.49267558683972174, (22, 40960): -12.64744003082005, (19, 57344): -2.0175564461814406, (30, 69632): -18.976154507166093, (17, 20480): -20.356693643427125, (14, 16384): 0.7234799352683869, (14, 45056): 7.864982323904419, (3, 4096): -23.367457567842084, (6, 69632): -16.143185374097946, (6, 12288): -13.50221777258051, (20, 73728): -14.57855214524363, (1, 57344): -7.1092865004285315, (32, 4096): -33.88721263547555, (8, 53248): -10.06220263964656, (10, 77824): -22.610305929943745, (18, 53248): -14.852075668938863, (2, 36864): -14.170070346692274, (19, 8192): -29.324751099437, (23, 36864): -3.6148924125453785, (29, 4096): -29.978480839760557, (16, 49152): -26.886279854612038, (32, 36864): -40.568314698513376, (24, 65536): -10.674517660184533, (28, 45056): -36.4443130630805, (3, 28672): -30.051133949349357, (9, 8192): 3.124997848479008, (20, 57344): 3.877452621702592, (1, 8192): -9.868918462544709, (18, 32768): -14.195041695390076, (25, 8192): -12.65299387585258, (9, 20480): 1.7079339397088362, (5, 32768): -11.8148670098623, (15, 12288): 15.037606557201983, (32, 40960): -41.27893514147904, (26, 8192): -1.675245207616504, (23, 40960): -19.624538067101568, (12, 77824): -9.415335408927815, (7, 12288): -14.59786445486681, (9, 45056): -0.51887091093737, (24, 57344): -12.544782768339424, (11, 77824): 24.74515529226374, (18, 16384): -33.099636133592334, (4, 12288): -4.742134439794804, (18, 45056): -8.681936429600826, (12, 36864): -6.849696103967011, (25, 49152): -28.658352493799637, (18, 8192): -20.60741324743324, (22, 69632): -2.2897484716597067, (19, 65536): -23.4983133175271, (29, 49152): -25.01790056633692, (18, 73728): 15.906112366385964, (9, 4096): -2.71735544048466, (4, 65536): -17.129315987873618, (13, 61440): -8.36848979477512, (20, 24576): -13.156062635705323, (3, 24576): -7.9449375063902306, (29, 45056): -21.679245657286945, (20, 8192): -12.766007588022818, (8, 24576): -9.405719762987864, (5, 16384): -17.616623687985314, (8, 20480): -15.487312468181944, (2, 40960): -13.060989245823102, (9, 69632): -19.062418052791234, (25, 40960): -24.239508151780257, (8, 65536): -1.6224083052925435, (7, 65536): 0.3907860312383926, (25, 53248): -19.321970793556375, (6, 57344): -14.1768136952229, (10, 24576): -14.320426308721729, (18, 57344): 4.585418810148618, (19, 77824): -6.1990144902514555, (5, 73728): -9.933820909285219, (14, 20480): -0.6227514356849244, (4, 16384): -20.69021257717244, (28, 16384): -29.97074726322334, (4, 4096): -17.51955812850384, (15, 61440): 23.575918977038064, (11, 61440): -11.81882195718869, (31, 77824): -22.366512253921613, (30, 12288): -37.85260128706947, (1, 24576): -13.37423450047056, (15, 28672): -3.259568954702262, (19, 53248): -5.121152051775342, (27, 45056): -20.32193136880324, (20, 20480): -4.053323200237174, (12, 4096): 9.975645846287039, (31, 24576): -34.23015077298654, (23, 45056): -11.50277839257467, (16, 20480): 11.001185369122632, (5, 45056): -10.044050924031596, (1, 61440): -7.960341785292288, (23, 32768): -13.883198411362743, (30, 32768): -32.463712061624605, (1, 77824): -8.049560967069928, (8, 16384): -4.5669685664912185, (22, 77824): -0.933532036283664, (7, 20480): -9.485769795631779, (8, 4096): 15.335024264182934, (27, 49152): -10.139703854604114, (26, 53248): 16.000273656273436, (29, 53248): -6.696529256113461, (11, 45056): -3.891759043058385, (7, 77824): -13.770111312110139, (19, 24576): 12.829559869901802, (20, 53248): 2.3158827863889835, (22, 4096): -21.45048893019941, (20, 69632): 4.465096408120108, (21, 73728): -3.7476243533633324, (4, 73728): -25.08630331870359, (32, 73728): -18.183684774093237, (9, 36864): -19.573985890642632, (26, 73728): 19.968867898477658, (4, 8192): -19.86195772323658, (17, 4096): 8.176691950836393, (2, 8192): -12.920531983496684, (8, 12288): 2.40331004102199, (22, 24576): 2.702713877834092, (9, 73728): -11.816935037206697, (31, 12288): -41.464219216362345, (2, 69632): -31.422995737648, (27, 36864): -29.797325195549508, (5, 4096): -4.914817196612216, (21, 36864): -14.86683411049047, (16, 53248): -8.885290674976423, (29, 32768): -30.36555320617394, (3, 40960): -26.678482674865663, (3, 57344): -26.9383917012869, (12, 28672): -22.97269380735721, (13, 73728): -3.9916648190023634, (19, 16384): -7.415955225034011, (5, 69632): -16.47271161441659, (30, 61440): -23.59817644960419, (32, 16384): -37.46597258682531, (6, 53248): -11.000662057482465, (26, 36864): -17.870660184414742, (7, 69632): -6.734914399898198, (26, 57344): -21.17360682881356, (6, 40960): -18.83403494630884, (1, 69632): -7.891369741038562, (31, 61440): -27.865151876338366, (27, 77824): -11.355287983123961, (21, 4096): -15.142238332490074, (15, 53248): -18.081896979010338, (24, 8192): -27.09084429432756, (2, 24576): -12.861868234197765, (27, 57344): -22.515388411287038, (6, 65536): -21.743837535226906, (15, 4096): 2.6624851494249406, (22, 28672): -21.246708622893326, (2, 4096): -16.054057962047132, (18, 77824): 12.87409632439166, (20, 61440): -16.240833047051293, (28, 57344): -10.033147651598169, (23, 4096): -1.759683797235574, (24, 12288): -25.93025087078199, (21, 49152): 4.887124672787236, (5, 65536): -18.61385657504227, (10, 45056): 0.5564017845001793, (25, 16384): -19.18595411784295, (32, 61440): -28.123254336499258, (10, 16384): -11.462126760610191, (1, 12288): -9.216725339995744, (25, 36864): -29.4462601660627, (24, 53248): -1.0374684166247927, (10, 73728): -13.077171582130473, (19, 4096): -0.18625885003528408, (30, 53248): -29.12196192026618, (5, 53248): -23.38543395338158, (4, 57344): -24.795628231453307, (2, 73728): -16.651814889532016, (32, 28672): -31.14912289572643, (27, 24576): -22.060615658594916, (21, 32768): -16.47281173335172, (6, 28672): -12.321902198838194, (7, 24576): 12.85871244877394, (21, 40960): -14.254052963132944, (26, 69632): -6.4735179682777515, (14, 40960): -5.916343211884487, (23, 12288): -22.53482215522623, (25, 12288): -36.457362439987236, (3, 77824): -16.797760336467128, (28, 12288): -31.56019894249718, (23, 65536): 16.47188370432308, (10, 65536): 0.67555014923879, (4, 24576): -33.00056991748327, (23, 28672): -4.2314523576466625, (7, 4096): 5.984634792028079, (27, 53248): -26.165628677083635, (26, 40960): -10.078945939347607, (28, 49152): -31.411503238683352, (24, 61440): -19.185910229686222, (25, 77824): -9.685277257316825, (30, 65536): 10.12011989758638, (10, 61440): -17.819118058846588, (8, 69632): -10.417327407010104, (1, 28672): -12.205797655584776, (30, 40960): -28.587220371022724, (14, 57344): 2.5892673879277845, (32, 77824): -11.355081622466995, (10, 57344): -8.301138053905142, (22, 32768): -5.0058546760869405, (17, 77824): -5.489542312189815, (25, 20480): -26.252401564411826, (14, 77824): -5.549825912985316, (12, 24576): -15.737055028174183, (14, 4096): -9.01875298010766, (9, 32768): -13.46645281033604, (16, 45056): -13.512843154949577, (15, 8192): -16.39604690098856, (1, 32768): -11.932927844776001, (25, 73728): -0.6700521838706143, (1, 4096): -16.347601794521324, (2, 77824): -10.679088209793344, (26, 16384): -1.5439103989384193, (14, 73728): -13.16119826594715, (15, 57344): -7.498577644352304, (10, 36864): -3.9792109004528724, (6, 73728): -11.056254386570165, (17, 53248): -9.029150751464373, (17, 36864): -18.90465029868995, (24, 40960): -22.473338119450194, (26, 61440): -26.37392932541441, (11, 28672): 10.393927182873588, (22, 73728): -5.3369518892780405, (4, 32768): -13.775387939728848, (30, 28672): -29.38545428367241, (18, 36864): 1.7989122274094962, (23, 20480): -15.805658923128533, (30, 4096): -39.299383701211354, (12, 65536): -18.379697102562574, (13, 28672): -2.5619538483188284, (7, 57344): -13.208744138496165, (21, 16384): 1.697480242297596, (21, 77824): -8.448031929789733, (28, 65536): -5.124295228751073, (3, 49152): -30.805279647522372, (27, 65536): -5.724178484634069, (28, 69632): -13.988223750489878, (2, 28672): -18.539193186529364, (11, 57344): -13.667032600370558, (10, 28672): 0.5100539712534811, (18, 20480): -16.851868920365074, (31, 49152): -25.385167116789738, (7, 16384): -4.792773311574158, (29, 40960): -24.45429121642819, (19, 20480): -3.680811023703083, (8, 36864): -6.595142755665321, (28, 8192): -37.46080423470934, (7, 8192): -9.703153787080595, (13, 69632): -4.8849005938863685, (29, 57344): -28.285993698576235, (29, 69632): -11.210944180744743, (1, 16384): -17.83841791817192, (22, 65536): 0.7333696707218735, (28, 40960): -30.748435320018512, (21, 65536): 1.114819309889406, (3, 20480): -30.757817679755163, (17, 40960): -28.182812583472217, (22, 20480): 11.830066941440071, (10, 4096): -7.651199285791789, (11, 16384): 0.33880191821247346, (15, 24576): -9.249128626220942, (29, 12288): -37.41595558343862, (19, 45056): 5.220529812583416, (30, 73728): -9.778034368923603, (1, 53248): -10.496147606286595, (8, 57344): -4.592442434537531, (17, 65536): 12.860892614553126, (5, 12288): -17.635590129150803, (4, 49152): -4.806512150423351, (20, 65536): -15.64500213177801, (9, 53248): -2.608342694128194, (22, 53248): -12.550142929026716, (15, 16384): 15.946592435889393, (26, 45056): -31.07813646196551, (28, 53248): -32.221441529282366, (28, 32768): -14.718594192209014, (11, 20480): -1.3081531660078192, (23, 8192): -21.770331329099676, (27, 28672): -21.37586045954013, (26, 77824): 12.11683811205181, (24, 45056): -18.506142732364385, (32, 53248): -17.472923096168337, (28, 4096): -28.242946417522585, (30, 45056): -26.57930978434203, (20, 4096): -28.75177327538745, (15, 36864): -14.821474080710912, (25, 4096): -19.847403081412672, (17, 8192): -29.165721058307685, (14, 8192): -10.602622749588422, (24, 69632): -9.519976264580347, (20, 16384): -22.148844996173384, (15, 32768): 18.484874771652358, (29, 36864): -32.02316407895854, (7, 49152): -8.553917498668094, (21, 57344): 13.684894355982488, (9, 77824): -21.88498556007376, (7, 32768): -10.80606110948815, (15, 45056): -15.405662173442828, (6, 8192): -13.213174083937243, (11, 49152): -2.5508695564552837, (22, 36864): -1.4012679465582019, (10, 40960): -7.229330183324577, (9, 16384): 1.9206228612100391, (30, 16384): -20.904555048845978, (8, 32768): -10.492450208444195, (32, 20480): -38.63286483206363, (1, 40960): -10.113205381786914, (16, 36864): -2.503829699157647, (26, 65536): -12.944739372436228, (3, 36864): -23.58777610333476, (16, 12288): -21.462297305720078, (3, 12288): -21.57614450180775, (28, 28672): -27.457174771052845, (31, 32768): -34.524716705522785, (25, 24576): -8.288927470927296, (14, 53248): -3.4364982371589776, (2, 57344): -22.059985775347222, (20, 77824): -17.13312595315994, (12, 16384): -12.576768950718797, (17, 57344): -7.067401804002158, (31, 73728): -21.14551968220582, (27, 8192): -24.904373383327304, (12, 61440): 0.05350382592906002, (6, 4096): -3.5645416836206, (12, 73728): -6.214733683560566, (19, 32768): -2.7356615452967676, (3, 45056): -24.7686501590055, (21, 8192): -10.730442034988947, (21, 24576): -7.219996790058361, (13, 20480): -15.397140799402347, (17, 28672): -17.74011110038671, (31, 28672): -28.678248866757016, (8, 45056): -16.40703205101412, (4, 69632): -24.55297325800656, (7, 36864): -11.875598503006415, (27, 20480): -24.418559101830837, (9, 57344): -11.300200911252055, (10, 32768): -16.933519799721484, (3, 65536): -12.781325836092227, (22, 16384): 12.137560570416195, (30, 49152): -24.334327031214283, (29, 8192): -23.552928434690156, (13, 45056): 9.690590912269966, (5, 8192): -3.871745983997158, (16, 61440): 35.69567168895776, (20, 32768): -19.486283897132083, (2, 32768): -13.145002913284218, (32, 65536): -14.862819960328599, (24, 32768): -28.733120067941854, (20, 12288): -26.89801819370295, (14, 12288): -1.5085424948358228, (29, 65536): -3.088752749387857, (10, 69632): -19.042783937187473, (11, 24576): -9.263676924548667, (13, 53248): -11.081150892218112, (23, 77824): 3.453140034508903, (3, 73728): -12.548375367254645, (11, 73728): 11.960962329498228, (2, 53248): -27.323018177240847, (5, 28672): -7.510899696756564, (13, 4096): 4.266809996487857, (11, 12288): -3.1399479881047654, (3, 16384): -25.442553709646486, (11, 36864): -23.87650184926801, (24, 16384): -20.012408624980974, (7, 61440): -6.02091551778541, (1, 49152): -5.707817524376433, (5, 57344): -10.23207723262152, (16, 69632): 12.928325795838171, (12, 69632): 7.4693074132469786, (5, 61440): -15.94389404010495, (5, 77824): -15.760950857523179, (19, 73728): 0.6008988175481537, (30, 57344): -11.650853788774096, (15, 20480): -11.754930109373376, (2, 16384): -21.161853642626312, (9, 12288): -5.380372467169106, (29, 24576): -27.110810030341785, (4, 28672): -28.989326391635185, (27, 61440): -22.57641179024727, (11, 53248): 11.831112586305323, (9, 28672): -5.4253366744792055, (7, 28672): -2.6816065578477035, (28, 77824): 0.4491002363962166, (19, 28672): -15.048797400828157, (23, 24576): -16.56116156121286, (4, 20480): -28.018020118958304, (26, 32768): -16.51214594791907, (13, 32768): -5.310241267222874, (11, 32768): -12.38704451193618, (1, 36864): -10.089999564451885, (31, 36864): -33.219419178983905, (12, 57344): 13.028422765699238, (20, 45056): -15.328234520738892, (29, 61440): -11.57782872565663, (17, 16384): -15.425534420101823, (10, 8192): 8.746499830584211, (26, 20480): -17.759671389165597, (18, 61440): -9.380240428642365, (6, 20480): -19.22870226463572, (8, 8192): 7.686218069696671, (28, 36864): -39.502624183645935, (21, 53248): -10.992711193110658, (14, 32768): 15.968227780858491, (25, 65536): -2.7368232560641217, (16, 8192): -3.449395620728599, (18, 69632): -25.954159663577634, (24, 4096): -22.213143497788018, (18, 28672): -34.40545257515315, (19, 40960): -12.197333848301934, (27, 73728): -13.790122614409311, (8, 61440): -16.61569225519262, (7, 53248): -12.193841192924689, (31, 40960): -33.844920217235355, (32, 24576): -35.985866363366775, (16, 24576): -14.093543758167874, (14, 36864): -8.088315468448187, (21, 12288): -17.05805752627088, (11, 65536): -15.251887524609886, (12, 49152): 20.277067040237213, (13, 77824): 15.006178412088131, (23, 49152): -13.405824780317566, (7, 73728): -10.8601224277849, (27, 32768): -21.916070516094738, (1, 65536): -8.151895951121102, (6, 45056): -12.365676868547313, (9, 24576): 17.790334142966127, (6, 77824): -10.015903462055542, (8, 49152): -8.561577773235095, (3, 8192): -33.66238631176228, (22, 49152): -5.358156888297083, (22, 45056): -21.102898651850026, (18, 40960): -22.213428024878013, (25, 61440): -12.137255568130211, (16, 16384): -16.249208278242467, (16, 40960): 8.858298021564151, (2, 12288): -12.884391675363746, (19, 36864): -11.399235617556293, (18, 4096): 6.0100420245533765, (13, 40960): -15.561208949037692, (24, 20480): -1.4542324110319702, (13, 57344): -19.593113622276135, (17, 32768): -10.383002353885455, (27, 69632): 14.845719616363793, (14, 28672): -5.311418643366469, (17, 12288): -21.590203229374634, (31, 57344): -27.390991202099503, (1, 73728): -6.854605907365011, (2, 65536): -30.958185867272046, (23, 57344): -17.576299557189245, (19, 49152): -2.1865178548047535, (22, 61440): -5.462914539869624, (15, 69632): 22.4718516270629, (31, 4096): -14.608615458438665, (23, 69632): -2.308505786167378, (29, 73728): -12.93751614145265, (5, 49152): -17.272530696695743, (27, 12288): -24.77925992297547, (8, 77824): -18.804904596266187, (21, 61440): -6.079891139866658, (30, 8192): -41.74766098116671, (5, 36864): -23.067858134683743, (24, 36864): -13.445730558230995, (29, 20480): -5.422032033751881, (9, 65536): -12.160998174789011, (16, 28672): -5.798631751385748, (26, 4096): -27.385118664745807, (31, 69632): -5.051691251000403, (4, 53248): -9.096879671820728, (10, 20480): 2.35490320912745, (20, 36864): -9.555204192544467, (1, 20480): -6.737376325991288, (8, 40960): -10.77612810645237, (31, 45056): -22.850141386366566, (14, 69632): -22.765473745387467, (14, 65536): -2.139596082720828, (19, 61440): -10.127986149028843, (24, 73728): -1.9078945249251695, (14, 61440): -25.458166979054386, (27, 40960): -7.684616069639048, (15, 49152): -3.779387061966619, (30, 36864): -39.97978881980782, (15, 77824): -10.130153350520507, (11, 8192): -15.38145027282505},
    #     'heatmap_direct.png',
    # )
    # render_heatmap(
    #     [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32],
    #     [4096, 8192, 12288, 16384, 20480, 24576, 28672, 32768, 36864, 40960, 45056, 49152, 53248, 57344, 61440, 65536, 69632, 73728, 77824],
    #     {(30, 77824): -14.101428289665765, (18, 12288): -40.436530280286284, (15, 65536): -23.845379445256718, (16, 77824): -24.74591003049853, (12, 20480): -50.482642683559554, (20, 28672): -38.274723586434234, (29, 28672): -27.11738014847321, (28, 24576): -18.45023649014704, (30, 20480): -32.320457438422345, (20, 40960): -34.787714227892664, (8, 28672): -61.25636633665532, (12, 45056): -47.327299672466, (21, 28672): -28.09212325477891, (24, 24576): -31.70839687297911, (3, 69632): -63.49753264820717, (4, 45056): -63.46159153558064, (11, 69632): -40.329256399626814, (23, 16384): -31.075922390478517, (5, 20480): -62.92342505592191, (25, 69632): -22.31290769812386, (3, 32768): -65.69113877207938, (25, 45056): -37.297736697491565, (24, 77824): -15.4080486504584, (9, 40960): -56.64979015491867, (3, 61440): -66.41076791626995, (32, 12288): -41.577805166769046, (26, 49152): -31.593427397664126, (25, 57344): -34.29879581154848, (6, 24576): -67.84782123030222, (32, 45056): -36.77792484992817, (13, 36864): -45.367048820000825, (25, 28672): -36.60684695981474, (4, 36864): -68.25135663507523, (23, 53248): -34.74881331845356, (12, 12288): -51.42645699841664, (22, 12288): -39.39380958497607, (31, 20480): -24.67384809885437, (10, 53248): -52.18108432010592, (6, 16384): -68.4140261348563, (6, 61440): -66.86245944980959, (14, 49152): -45.506287397826696, (7, 40960): -58.92769873489156, (6, 36864): -69.64253407588777, (15, 73728): -27.251138379881457, (19, 69632): -17.26013727087984, (17, 24576): -39.436669801377974, (12, 32768): -49.01792404262821, (28, 20480): -34.61960611560406, (13, 49152): -43.945880995186926, (16, 57344): -40.163620289394416, (17, 73728): -20.28790849556752, (32, 49152): -28.711609552174185, (20, 49152): -36.90324518388842, (9, 49152): -56.47378555857496, (10, 12288): -53.34496749656479, (4, 40960): -67.77827485768904, (21, 69632): -19.361070702185724, (32, 57344): -33.66917912304774, (1, 45056): -70.75088567969274, (16, 32768): -35.73825753353398, (17, 69632): -22.89397046740742, (18, 49152): -28.197888875504383, (22, 8192): -46.74750761231806, (2, 20480): -71.50546568883907, (7, 45056): -60.60803736980509, (18, 24576): -36.36397872835622, (12, 8192): -50.35063367972798, (26, 24576): -25.927749446854165, (29, 16384): -19.4325854177857, (24, 28672): -32.08218367680208, (16, 73728): -24.318184941982384, (28, 61440): -28.978081812336253, (14, 24576): -46.963725335031945, (23, 61440): -31.635120700602897, (9, 61440): -52.42378193579451, (16, 65536): -37.31640726369121, (31, 16384): -18.002394449790827, (31, 53248): -22.590953429179216, (32, 32768): -20.60569062692648, (28, 73728): -13.261304232035604, (17, 49152): -35.29187526104059, (32, 69632): -24.528764396600643, (23, 73728): -8.173355981712145, (29, 77824): -12.295375567584529, (19, 12288): -45.510783635084955, (5, 24576): -67.33171131524817, (3, 53248): -57.03609339603758, (13, 24576): -46.19145633843205, (21, 20480): -35.296907753789505, (26, 12288): -32.73180690299093, (21, 45056): -41.07632006142127, (2, 45056): -69.90381177366359, (4, 77824): -64.8845165470811, (11, 4096): -45.5754852264465, (32, 8192): -48.41714452618105, (13, 8192): -52.94299830970463, (24, 49152): -23.46976863347025, (15, 40960): -45.65313608632996, (10, 49152): -53.03961375442182, (22, 57344): -36.27894232060094, (11, 40960): -50.58841950568775, (26, 28672): -32.070331420937606, (13, 65536): -39.07679034989779, (12, 40960): -48.52432826798408, (31, 65536): -20.30044728037464, (25, 32768): -42.03599309349998, (27, 4096): -30.30153826991242, (13, 16384): -53.06845887545235, (6, 32768): -67.08661435691549, (16, 4096): -40.48099432281543, (13, 12288): -48.910763294255446, (12, 53248): -48.750479797678445, (31, 8192): -42.1733399414197, (2, 49152): -69.48529145354621, (30, 24576): -22.19645914888574, (18, 65536): -29.90851945955023, (27, 16384): -26.743424875522543, (2, 61440): -60.08988670999001, (8, 73728): -55.029755681442914, (17, 45056): -40.2833668065836, (4, 61440): -65.4694231437047, (5, 40960): -69.41094088820304, (6, 49152): -55.313080280937434, (17, 61440): -34.9786177500277, (22, 40960): -42.39239345004789, (19, 57344): -34.06754724494668, (30, 69632): -12.177551485419903, (17, 20480): -44.12778233752982, (14, 16384): -48.51415887567712, (14, 45056): -46.07126180000052, (3, 4096): -58.05483659676327, (6, 69632): -65.19202298351449, (6, 12288): -65.42318832009765, (20, 73728): -22.2322278184191, (1, 57344): -68.23091817030054, (32, 4096): -27.192585992674218, (8, 53248): -58.205039583647036, (10, 77824): -47.104328306941404, (18, 53248): -35.57185818811513, (2, 36864): -70.06632147477363, (19, 8192): -40.54762440154913, (23, 36864): -38.93406977430774, (29, 4096): -23.671275327333934, (16, 49152): -39.20697163838368, (32, 36864): -39.29066430970946, (24, 65536): -11.69995638336934, (28, 45056): -43.378486729038336, (3, 28672): -64.73357977957187, (9, 8192): -54.34426064597445, (20, 57344): -31.632652709339737, (1, 8192): -72.24032929443862, (18, 32768): -37.02527761388707, (25, 8192): -38.39992307379332, (9, 20480): -56.40749382129584, (5, 32768): -65.99718258425929, (15, 12288): -47.716892346058735, (32, 40960): -41.389751905169874, (26, 8192): -23.044255769243527, (23, 40960): -31.553349583634898, (12, 77824): -40.61186659281971, (7, 12288): -63.34591451187565, (9, 45056): -56.23637784833599, (24, 57344): -36.94891754283452, (11, 77824): -37.13991349305205, (18, 16384): -40.38831780443193, (4, 12288): -71.6037599268188, (18, 45056): -37.22096938399997, (12, 36864): -49.47517266496924, (25, 49152): -33.16414951861115, (18, 8192): -38.13580759172918, (22, 69632): -12.123004148871138, (19, 65536): -29.782909553172427, (29, 49152): -18.712958569761927, (18, 73728): -19.630497289576827, (9, 4096): -51.91798955436001, (4, 65536): -64.77280926418725, (13, 61440): -45.40343971239971, (20, 24576): -36.10485619716894, (3, 24576): -62.100441361723156, (29, 45056): -35.78387364094365, (20, 8192): -45.88000455861783, (8, 24576): -60.275907925733065, (5, 16384): -64.34954950923391, (8, 20480): -61.40820219348072, (2, 40960): -69.0273740485568, (9, 69632): -53.961681267257674, (25, 40960): -20.390100898831317, (8, 65536): -58.087519157867305, (7, 65536): -54.93654477579961, (25, 53248): -32.62411628149941, (6, 57344): -67.53176065926529, (10, 24576): -55.463169393597646, (18, 57344): -33.5670040103188, (19, 77824): -12.199069995200114, (5, 73728): -64.60402237921038, (14, 20480): -45.34356316649125, (4, 16384): -70.81112275120728, (28, 16384): -24.070955613201505, (4, 4096): -62.64583468265561, (15, 61440): -33.20971291725513, (11, 61440): -46.36251614302482, (31, 77824): -12.478713886113214, (30, 12288): -35.977703526289474, (1, 24576): -70.37175642581411, (15, 28672): -44.43154266814117, (19, 53248): -32.164651049160994, (27, 45056): -22.521185229971966, (20, 20480): -39.95690968738466, (12, 4096): -49.990796325860856, (31, 24576): -18.095323818900454, (23, 45056): -26.267405825672796, (16, 20480): -42.47098698249915, (5, 45056): -67.22062069761488, (1, 61440): -67.96863647714859, (23, 32768): -32.74656193174085, (30, 32768): -29.459104463587217, (1, 77824): -67.15128246314326, (8, 16384): -58.39546038176599, (22, 77824): -9.884903657398619, (7, 20480): -62.55194668220645, (8, 4096): -52.53116714439058, (27, 49152): -32.60828158405069, (26, 53248): -31.1301649360807, (29, 53248): -32.54967249628457, (11, 45056): -53.864467556320264, (7, 77824): -58.949589359104046, (19, 24576): -37.03162346963756, (20, 53248): -36.61501677629479, (22, 4096): -37.663954176871414, (20, 69632): -24.2775417705472, (21, 73728): -13.266628806485834, (4, 73728): -71.17686502463042, (32, 73728): -17.627288556851124, (9, 36864): -60.24943341501145, (26, 73728): -4.107766758974598, (4, 8192): -66.28014334204187, (17, 4096): -36.49128784607171, (2, 8192): -73.10014983173022, (8, 12288): -56.84937507115132, (22, 24576): -37.381829550825366, (9, 73728): -53.71366358213171, (31, 12288): -32.12778044687842, (2, 69632): -69.43987045269962, (27, 36864): -33.9634345296546, (5, 4096): -66.08623310186775, (21, 36864): -40.22549068189528, (16, 53248): -41.342007872420716, (29, 32768): -44.66577078948637, (3, 40960): -64.64600619995515, (3, 57344): -66.3436903258488, (12, 28672): -49.62181541112417, (13, 73728): -33.00274889832665, (19, 16384): -40.36701950660239, (5, 69632): -68.2047363540192, (30, 61440): -18.181065067548015, (32, 16384): -35.92000611238331, (6, 53248): -66.54505425117053, (26, 36864): -34.14738699850286, (7, 69632): -56.24623050084033, (26, 57344): -32.94578614250819, (6, 40960): -67.32788224628786, (1, 69632): -66.40426154173693, (31, 61440): -31.460227587112527, (27, 77824): -27.265542490528137, (21, 4096): -37.06792031358022, (15, 53248): -45.343998696979135, (24, 8192): -36.94888799937202, (2, 24576): -70.55017262106807, (27, 57344): -34.87611624206161, (6, 65536): -67.65278617527233, (15, 4096): -41.88100368324037, (22, 28672): -31.118982959572694, (2, 4096): -67.58951030841628, (18, 77824): -19.741629883764876, (20, 61440): -31.46061038329776, (28, 57344): -25.44028168397793, (23, 4096): -33.59785390438776, (24, 12288): -33.78394542863584, (21, 49152): -30.191785988768434, (5, 65536): -70.23604626560356, (10, 45056): -54.257428654578874, (25, 16384): -39.05942647493079, (32, 61440): -38.33994042711185, (10, 16384): -56.06108582690184, (1, 12288): -71.96861981131886, (25, 36864): -36.340150099640226, (24, 53248): -34.76960310432665, (10, 73728): -48.540669356435046, (19, 4096): -38.57898105317168, (30, 53248): -20.510875587801706, (5, 53248): -70.7007061490404, (4, 57344): -70.69056135334729, (2, 73728): -68.74647242422365, (32, 28672): -18.90972010596286, (27, 24576): -30.916850206123, (21, 32768): -34.34994203659613, (6, 28672): -63.914233945211954, (7, 24576): -59.81587918168822, (21, 40960): -36.99900549856409, (26, 69632): -7.943538928871866, (14, 40960): -46.98861464379827, (23, 12288): -36.34384087992408, (25, 12288): -37.55503086260154, (3, 77824): -69.0112104226, (28, 12288): -21.47375634889392, (23, 65536): -13.749008012024797, (10, 65536): -46.1663386926169, (4, 24576): -74.69537103184526, (23, 28672): -38.1167666214508, (7, 4096): -56.80668549204441, (27, 53248): -25.515005193453405, (26, 40960): -35.12958212975567, (28, 49152): -23.701622096629055, (24, 61440): -23.981985005896647, (25, 77824): -15.033956079326508, (30, 65536): -12.116002275267604, (10, 61440): -54.75672058082473, (8, 69632): -57.097016864512696, (1, 28672): -71.11925307473064, (30, 40960): -20.8262178186988, (14, 57344): -45.573292836518526, (32, 77824): -12.782688074331686, (10, 57344): -53.53784253075724, (22, 32768): -28.710531867335128, (17, 77824): -26.915135243484723, (25, 20480): -33.97109329127908, (14, 77824): -35.97611485488881, (12, 24576): -52.22981608799764, (14, 4096): -45.176096943110764, (9, 32768): -57.33434919165348, (16, 45056): -41.08595383468155, (15, 8192): -44.01967699296933, (1, 32768): -71.16905550208678, (25, 73728): -8.882047041636076, (1, 4096): -69.40998783870363, (2, 77824): -64.59204141477805, (26, 16384): -20.330636131751493, (14, 73728): -34.57741374810967, (15, 57344): -36.42948346922772, (10, 36864): -53.86008526586763, (6, 73728): -59.08772132175676, (17, 53248): -36.11265717752324, (17, 36864): -43.13810113897888, (24, 40960): -36.4047045035696, (26, 61440): -38.47036571926205, (11, 28672): -54.01537023099009, (22, 73728): -17.150699518218516, (4, 32768): -67.54050135420644, (30, 28672): -24.854166028864316, (18, 36864): -40.14666947606781, (23, 20480): -35.63665446647113, (30, 4096): -43.65745789893693, (12, 65536): -38.01376937526109, (13, 28672): -49.24167303921805, (7, 57344): -62.810536893444656, (21, 16384): -40.8782969465733, (21, 77824): -7.257411777918481, (28, 65536): -7.887977807649245, (3, 49152): -69.1637171364818, (27, 65536): -23.516265736441973, (28, 69632): -1.849677928010233, (2, 28672): -71.11490911188079, (11, 57344): -51.54961439110905, (10, 28672): -53.95098896586875, (18, 20480): -33.43020091375264, (31, 49152): -40.93841779264031, (7, 16384): -61.503223715572865, (29, 40960): -36.41622875848128, (19, 20480): -37.72834414038272, (8, 36864): -57.80920255778088, (28, 8192): -48.677658216589656, (7, 8192): -62.970688239309865, (13, 69632): -36.087387415939595, (29, 57344): -24.925288321234664, (29, 69632): -14.374407955328428, (1, 16384): -72.51194604970983, (22, 65536): -7.1160071768003625, (28, 40960): -32.630107834104116, (21, 65536): -10.085430934757234, (3, 20480): -64.25235199232449, (17, 40960): -37.88785625394645, (22, 20480): -36.42315834742719, (10, 4096): -51.51338849579117, (11, 16384): -51.83206021046465, (15, 24576): -42.07986582228947, (29, 12288): -45.44883532787785, (19, 45056): -37.5683358139311, (30, 73728): -9.52663347329942, (1, 53248): -68.69168051507437, (8, 57344): -56.96452837278903, (17, 65536): -25.486547750958106, (5, 12288): -67.33337615412871, (4, 49152): -67.83124055924233, (20, 65536): -15.847118091031865, (9, 53248): -54.020199214884435, (22, 53248): -35.07746900899807, (15, 16384): -43.91734302665441, (26, 45056): -38.51196195578638, (28, 53248): -24.127937642166835, (28, 32768): -23.839818621266673, (11, 20480): -52.79743451064164, (23, 8192): -40.242725196034925, (27, 28672): -33.50306153206966, (26, 77824): -20.27035879597626, (24, 45056): -34.06018013995485, (32, 53248): -21.244828496222432, (28, 4096): -27.05669184161403, (30, 45056): -29.39860375970666, (20, 4096): -35.24836857494654, (15, 36864): -44.531896412750015, (25, 4096): -31.405028610447193, (17, 8192): -46.984105243165445, (14, 8192): -46.855811504612255, (24, 69632): -19.553304669141685, (20, 16384): -40.47959897433701, (15, 32768): -43.170404232945664, (29, 36864): -30.966470933498453, (7, 49152): -61.642701219807506, (21, 57344): -29.1288219381798, (9, 77824): -51.51857651878271, (7, 32768): -58.28089662567281, (15, 45056): -44.638273117348525, (6, 8192): -63.414192299281794, (11, 49152): -48.867142658047555, (22, 36864): -37.55667179435604, (10, 40960): -55.383433611357155, (9, 16384): -57.22440651434586, (30, 16384): -29.434041285504918, (8, 32768): -58.63771791807617, (32, 20480): -23.123305994588296, (1, 40960): -69.89359379462913, (16, 36864): -35.095274694471534, (26, 65536): -19.694777955314265, (3, 36864): -64.06170039193819, (16, 12288): -44.088343160736876, (3, 12288): -64.08908936462102, (28, 28672): -37.00541238973299, (31, 32768): -34.70552443016909, (25, 24576): -41.050796172293005, (14, 53248): -45.610824000162644, (2, 57344): -69.43623392572472, (20, 77824): -9.953744138494287, (12, 16384): -51.9462424371204, (17, 57344): -34.30548925076946, (31, 73728): -5.364161872664948, (27, 8192): -31.475352021100278, (12, 61440): -51.041056063100775, (6, 4096): -53.42132909767609, (12, 73728): -41.108760554397975, (19, 32768): -37.87553426106261, (3, 45056): -64.00192173960832, (21, 8192): -29.209630184241224, (21, 24576): -37.668171150061056, (13, 20480): -48.225909380358964, (17, 28672): -38.0156822151485, (31, 28672): -15.890447779039688, (8, 45056): -60.5701195697147, (4, 69632): -72.2835020003219, (7, 36864): -60.00316102773373, (27, 20480): -34.68290514820415, (9, 57344): -59.43179050471771, (10, 32768): -56.64099551136964, (3, 65536): -69.6852487092577, (22, 16384): -32.01148864397236, (30, 49152): -31.847676772929233, (29, 8192): -29.09943581304924, (13, 45056): -48.34981542039903, (5, 8192): -66.41616066818543, (16, 61440): -26.195917390407512, (20, 32768): -36.42948337983382, (2, 32768): -70.12687382560091, (32, 65536): -1.495905342474152, (24, 32768): -38.54875419627144, (20, 12288): -44.54816411658229, (14, 12288): -45.197938745400954, (29, 65536): -3.3760583748983155, (10, 69632): -49.02032439335466, (11, 24576): -53.922567014196154, (13, 53248): -46.60548730076704, (23, 77824): -19.347124139190655, (3, 73728): -67.12476828283161, (11, 73728): -40.58692352220758, (2, 53248): -69.07603686629999, (5, 28672): -64.8415663464047, (13, 4096): -45.02704028243699, (11, 12288): -54.18775879371789, (3, 16384): -70.02262915831781, (11, 36864): -54.00354127885926, (24, 16384): -29.49047204976228, (7, 61440): -61.36913082576287, (1, 49152): -68.47065023402952, (5, 57344): -67.68296162034346, (16, 69632): -29.390204730239528, (12, 69632): -40.783604946611376, (5, 61440): -67.08637670050511, (5, 77824): -66.69051152497205, (19, 73728): -16.232009457876906, (30, 57344): -20.777760763832852, (15, 20480): -41.73304849054817, (2, 16384): -71.3171440411648, (9, 12288): -52.74327667423343, (29, 24576): -21.764747508111824, (4, 28672): -73.30661172136037, (27, 61440): -30.65246294016959, (11, 53248): -49.52284559045821, (9, 28672): -55.49933623360167, (7, 28672): -59.29761662997733, (28, 77824): -8.24612667893413, (19, 28672): -37.35754113063127, (23, 24576): -39.66961590839643, (4, 20480): -69.16327391166487, (26, 32768): -22.81338557786732, (13, 32768): -46.404317249910214, (11, 32768): -53.19448910936142, (1, 36864): -72.06073706754293, (31, 36864): -27.986195383606482, (12, 57344): -48.40325988396646, (20, 45056): -37.79092228314867, (29, 61440): -33.77620635766385, (17, 16384): -44.74197228137199, (10, 8192): -56.823835095342815, (26, 20480): -20.097339804857967, (18, 61440): -36.814588443582856, (6, 20480): -65.90338601936044, (8, 8192): -58.223034410884885, (28, 36864): -38.397913964282786, (21, 53248): -29.860638717471126, (14, 32768): -49.06154377572361, (25, 65536): -23.785444726421122, (16, 8192): -42.623522252644335, (18, 69632): -32.53768432766593, (24, 4096): -28.324049091784637, (18, 28672): -41.55773197260771, (19, 40960): -38.01703336732044, (27, 73728): -15.88555970279174, (8, 61440): -59.78911926384133, (7, 53248): -62.96348763481481, (31, 40960): -40.5549526986529, (32, 24576): -18.335275521975227, (16, 24576): -42.098659791445755, (14, 36864): -45.96179059427362, (21, 12288): -43.15149700253718, (11, 65536): -44.713879088350424, (12, 49152): -46.715530335020624, (13, 77824): -32.114847115906656, (23, 49152): -36.09963908076213, (7, 73728): -61.19893514585879, (27, 32768): -28.43338936058434, (1, 65536): -67.51512499721092, (6, 45056): -64.77888395127258, (9, 24576): -52.88677893729383, (6, 77824): -59.91379615024973, (8, 49152): -57.79178786959221, (3, 8192): -65.50352295735914, (22, 49152): -32.704599382114, (22, 45056): -38.05741149789332, (18, 40960): -40.496667098320025, (25, 61440): -16.883537021747834, (16, 16384): -38.16816797369463, (16, 40960): -43.65476404485955, (2, 12288): -71.23411381914175, (19, 36864): -39.332280580633665, (18, 4096): -33.65043636427601, (13, 40960): -49.030904436727205, (24, 20480): -42.29978308691088, (13, 57344): -47.21680841215628, (17, 32768): -37.820747028388304, (27, 69632): -13.625181613922802, (14, 28672): -45.67801807280916, (17, 12288): -44.990117723696336, (31, 57344): -39.122408104117504, (1, 73728): -67.05566159801208, (2, 65536): -68.12456015678025, (23, 57344): -31.959804180548346, (19, 49152): -36.948904743936936, (22, 61440): -32.241859706973294, (15, 69632): -28.85367348857384, (31, 4096): -22.669407205343827, (23, 69632): -18.16869843465368, (29, 73728): -7.869818014190544, (5, 49152): -69.12964515117129, (27, 12288): -38.574873704015545, (8, 77824): -54.09791930920454, (21, 61440): -29.80415217815638, (30, 8192): -37.838532941611966, (5, 36864): -68.56218067827763, (24, 36864): -31.770265435255173, (29, 20480): -31.951734884582727, (9, 65536): -51.763039375992136, (16, 28672): -41.94020012835293, (26, 4096): -37.11916692493822, (31, 69632): -10.013162760616192, (4, 53248): -68.29031850852944, (10, 20480): -53.1605291472528, (20, 36864): -36.95760698517642, (1, 20480): -71.47639356189399, (8, 40960): -57.821573235113775, (31, 45056): -42.61571607176731, (14, 69632): -36.16634041042219, (14, 65536): -40.453360136598285, (19, 61440): -32.22128441212462, (24, 73728): -15.342827009882445, (14, 61440): -44.595577267361584, (27, 40960): -26.662807700024388, (15, 49152): -38.28786744368469, (30, 36864): -39.916850115979805, (15, 77824): -32.05673729486598, (11, 8192): -56.85139555821475},
    #     'heatmap_sgx.png',
    # )
    return 0

def main(argv):
    # for two-socket ICX machine
    os.sched_setaffinity(0, list(range(32))+list(range(64, 96)))
    # return main_rwlock_benchmark(argv)
    return main_matrix_benchmark(argv)

if __name__ == '__main__':
    raise SystemExit(main(sys.argv))
